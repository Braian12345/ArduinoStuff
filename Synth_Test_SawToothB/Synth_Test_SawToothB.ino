/**************************************************************************/
/*!
    @file     sinewave.pde
    @author   Adafruit Industries
    @license  BSD (see license.txt)

    This example will generate a sine wave with the MCP4725 DAC.

    This is an example sketch for the Adafruit MCP4725 breakout board
    ----> http://www.adafruit.com/products/935

    Adafruit invests time and resources providing this open source code,
    please support Adafruit and open-source hardware by purchasing
    products from Adafruit!
*/
/**************************************************************************/
#include <Wire.h>
#include <Adafruit_MCP4725.h>

Adafruit_MCP4725 dac;

// Set this value to 9, 8, 7, 6 or 5 to adjust the resolution
#define DAC_RESOLUTION    (9)

/* Note: If flash space is tight a quarter sine wave is enough
   to generate full sine and cos waves, but some additional
   calculation will be required at each step after the first
   quarter wave.                                              */

const PROGMEM uint16_t DACLookup_FullSine_9Bit[500] =
{
0, 45, 91, 136, 182, 227, 273, 318, 364, 409, 455, 501, 546, 592, \
637, 683, 728, 774, 819, 865, 910, 956, 1002, 1047, 1093, 1138, 1184, \
1229, 1275, 1320, 1366, 1411, 1457, 1503, 1548, 1594, 1639, 1685, \
1730, 1776, 1821, 1867, 1912, 1958, 2004, 2049, 2095, 2140, 2186, \
2231, 207, 252, 298, 343, 389, 434, 480, 525, 571, 616, 662, 708, \
753, 799, 844, 890, 935, 981, 1026, 1072, 1117, 1163, 1209, 1254, \
1300, 1345, 1391, 1436, 1482, 1527, 1573, 1618, 1664, 1710, 1755, \
1801, 1846, 1892, 1937, 1983, 2028, 2074, 2119, 2165, 2211, 2256, \
2302, 2347, 2393, 2438, 414, 459, 505, 550, 596, 641, 687, 732, 778, \
823, 869, 915, 960, 1006, 1051, 1097, 1142, 1188, 1233, 1279, 1324, \
1370, 1416, 1461, 1507, 1552, 1598, 1643, 1689, 1734, 1780, 1825, \
1871, 1917, 1962, 2008, 2053, 2099, 2144, 2190, 2235, 2281, 2326, \
2372, 2418, 2463, 2509, 2554, 2600, 2645, 621, 666, 712, 757, 803, \
848, 894, 939, 985, 1030, 1076, 1122, 1167, 1213, 1258, 1304, 1349, \
1395, 1440, 1486, 1532, 1577, 1623, 1668, 1714, 1759, 1805, 1850, \
1896, 1941, 1987, 2033, 2078, 2124, 2169, 2215, 2260, 2306, 2351, \
2397, 2442, 2488, 2534, 2579, 2625, 2670, 2716, 2761, 2807, 2852, \
828, 873, 919, 964, 1010, 1055, 1101, 1146, 1192, 1238, 1283, 1329, \
1374, 1420, 1465, 1511, 1556, 1602, 1647, 1693, 1739, 1784, 1830, \
1875, 1921, 1966, 2012, 2057, 2103, 2148, 2194, 2240, 2285, 2331, \
2376, 2422, 2467, 2513, 2558, 2604, 2649, 2695, 2741, 2786, 2832, \
2877, 2923, 2968, 3014, 3059, 1035, 1080, 1126, 1171, 1217, 1262, \
1308, 1353, 1399, 1445, 1490, 1536, 1581, 1627, 1672, 1718, 1763, \
1809, 1854, 1900, 1946, 1991, 2037, 2082, 2128, 2173, 2219, 2264, \
2310, 2355, 2401, 2447, 2492, 2538, 2583, 2629, 2674, 2720, 2765, \
2811, 2856, 2902, 2948, 2993, 3039, 3084, 3130, 3175, 3221, 3266, \
1242, 1287, 1333, 1378, 1424, 1469, 1515, 1560, 1606, 1652, 1697, \
1743, 1788, 1834, 1879, 1925, 1970, 2016, 2061, 2107, 2153, 2198, \
2244, 2289, 2335, 2380, 2426, 2471, 2517, 2562, 2608, 2654, 2699, \
2745, 2790, 2836, 2881, 2927, 2972, 3018, 3064, 3109, 3155, 3200, \
3246, 3291, 3337, 3382, 3428, 3473, 1449, 1494, 1540, 1585, 1631, \
1676, 1722, 1768, 1813, 1859, 1904, 1950, 1995, 2041, 2086, 2132, \
2177, 2223, 2269, 2314, 2360, 2405, 2451, 2496, 2542, 2587, 2633, \
2678, 2724, 2770, 2815, 2861, 2906, 2952, 2997, 3043, 3088, 3134, \
3179, 3225, 3271, 3316, 3362, 3407, 3453, 3498, 3544, 3589, 3635, \
3680, 1656, 1701, 1747, 1792, 1838, 1883, 1929, 1975, 2020, 2066, \
2111, 2157, 2202, 2248, 2293, 2339, 2384, 2430, 2476, 2521, 2567, \
2612, 2658, 2703, 2749, 2794, 2840, 2885, 2931, 2977, 3022, 3068, \
3113, 3159, 3204, 3250, 3295, 3341, 3386, 3432, 3478, 3523, 3569, \
3614, 3660, 3705, 3751, 3796, 3842, 3887, 1863, 1908, 1954, 1999, \
2045, 2090, 2136, 2182, 2227, 2273, 2318, 2364, 2409, 2455, 2500, \
2546, 2591, 2637, 2683, 2728, 2774, 2819, 2865, 2910, 2956, 3001, \
3047, 3092, 3138, 3184, 3229, 3275, 3320, 3366, 3411, 3457, 3502, \
3548, 3593, 3639, 3685, 3730, 3776, 3821, 3867, 3912, 3958, 4003, \
4049, 4094
};

void setup(void) {
  Serial.begin(9600);
  Serial.println("Hello!");
  dac.begin(0x62);

  Serial.println("Generating a sine wave");
  pinMode(A0,INPUT);
}

void loop(void) {
  uint16_t i;
  int val = map(analogRead(A0),0,1023,1,40);
  // Push out the right lookup table, depending on the selected resolution
  for (i = 0; i < 500; i += val)
  {
    dac.setVoltage(pgm_read_word(&(DACLookup_FullSine_9Bit[i])), false);
  }
}
